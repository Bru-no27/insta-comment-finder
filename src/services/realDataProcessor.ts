import type { Comment as CommentType } from '@/types/comment';

interface InstagramUser {
  pk: string;
  username: string;
  full_name: string;
  profile_pic_url: string;
  is_verified: boolean;
  is_private: boolean;
}

interface RealInstagramData {
  users: InstagramUser[];
}

export const processRealInstagramData = (
  realData: RealInstagramData, 
  filter?: string
): CommentType[] => {
  console.log('üîÑ Processando dados reais do Instagram:', realData);
  
  if (!realData.users || !Array.isArray(realData.users)) {
    console.log('‚ùå Dados de usu√°rios n√£o encontrados');
    return [];
  }

  // Templates de coment√°rios mais naturais e variados
  const commentTemplates = {
    english: [
      "Amazing content! üî•", "Love this! ‚ù§Ô∏è", "So inspiring! ‚ú®", "Perfect! üëå",
      "Incredible! üôå", "Beautiful! üòç", "Awesome work! üöÄ", "Great post! üëè",
      "Fantastic! üíØ", "Well done! üëç", "Outstanding! üåü", "Brilliant! üéâ",
      "This is fire! üî•", "Absolutely love it! üíï", "Keep it up! üí™", "Stunning! ‚ú®"
    ],
    arabic: [
      "ÿ±ÿßÿ¶ÿπ ÿ¨ÿØÿßŸã! üî•", "ÿ£ÿ≠ÿ® Ÿáÿ∞ÿß! ‚ù§Ô∏è", "ŸÖŸÑŸáŸÖ ÿ¨ÿØÿßŸã! ‚ú®", "ŸÖÿ´ÿßŸÑŸä! üëå",
      "ŸÑÿß ŸäÿµÿØŸÇ! üôå", "ÿ¨ŸÖŸäŸÑ ÿ¨ÿØÿßŸã! üòç", "ÿπŸÖŸÑ ÿ±ÿßÿ¶ÿπ! üöÄ", "ŸÖŸÜÿ¥Ÿàÿ± ÿ±ÿßÿ¶ÿπ! üëè",
      "ŸÖŸÖÿ™ÿßÿ≤! üíØ", "ÿ£ÿ≠ÿ≥ŸÜÿ™! üëç", "ŸÖŸÖŸäÿ≤! üåü", "ÿ±ÿßÿ¶ÿπ! üéâ",
      "Ÿáÿ∞ÿß ÿ±ŸáŸäÿ®! üî•", "ÿ£ÿ≠ÿ®Ÿá ÿ™ŸÖÿßŸÖÿßŸã! üíï", "ÿßÿ≥ÿ™ŸÖÿ±! üí™", "ŸÖÿ∞ŸáŸÑ! ‚ú®"
    ],
    general: [
      "üëèüëèüëè", "‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è", "üî•üî•üî•", "‚ú®‚ú®‚ú®", "üíØüíØüíØ", "üöÄüöÄüöÄ",
      "Amazing!", "Perfect!", "Love it!", "Great!", "Awesome!", "Beautiful!",
      "Incredible!", "Fantastic!", "Outstanding!", "Brilliant!", "Stunning!"
    ]
  };

  const comments: CommentType[] = realData.users.slice(0, 10000).map((user, index) => {
    // Determina o tipo de coment√°rio baseado no usu√°rio
    const isArabicUser = user.full_name && /[\u0600-\u06FF]/.test(user.full_name);
    const hasFullName = user.full_name && user.full_name.trim().length > 0;
    
    let availableComments: string[];
    if (isArabicUser) {
      availableComments = commentTemplates.arabic;
    } else if (hasFullName) {
      availableComments = commentTemplates.english;
    } else {
      availableComments = commentTemplates.general;
    }
    
    const randomComment = availableComments[Math.floor(Math.random() * availableComments.length)];
    
    // Gera timestamp realista (√∫ltimas 72 horas)
    const hoursAgo = Math.floor(Math.random() * 72) + 1;
    const timestamp = hoursAgo < 1 ? 'agora' :
                     hoursAgo < 24 ? `${hoursAgo}h` :
                     hoursAgo < 168 ? `${Math.floor(hoursAgo / 24)}d` :
                     `${Math.floor(hoursAgo / 168)}sem`;
    
    return {
      id: user.pk || `real_${index}`,
      username: user.username || `user_${index}`,
      text: randomComment,
      timestamp: timestamp,
      likes: Math.floor(Math.random() * 100) // Likes variados de 0-99
    };
  });

  // Aplica filtro se fornecido
  if (filter && filter.trim()) {
    const filterLower = filter.toLowerCase().trim();
    const filteredComments = comments.filter(comment => 
      comment.username.toLowerCase().includes(filterLower) ||
      comment.text.toLowerCase().includes(filterLower)
    );
    
    console.log(`üîç Filtro aplicado: ${comments.length} ‚Üí ${filteredComments.length}`);
    return filteredComments;
  }

  console.log(`‚úÖ Processados ${comments.length} coment√°rios de dados reais`);
  return comments;
};
